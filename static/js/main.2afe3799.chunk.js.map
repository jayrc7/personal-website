{"version":3,"sources":["logo.svg","components/Links.js","components/AppHeader.js","components/ProjectDisplay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Links","react_default","a","createElement","className","Image","Group","size","src","as","href","target","title","circular","React","Component","AppHeader","Header","inverted","Content","Subheader","src_components_Links","ProjectDisplay","state","currTags","projects","toggleTag","event","_ref","value","alert","_this$state","this","Container","text","textAlign","Segment","attached","content","Button","compact","color","onClick","props","App","src_components_AppHeader","src_components_ProjectDisplay","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2afe3799.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Links.css';\nimport { Image } from 'semantic-ui-react';\n\nclass Links extends React.Component{\n  render(){\n    return(\n      <div className=\"links\"> \n        <Image.Group size = \"mini\">\n          <Image src={\"https://ubisafe.org/images/email-vector.png\"} \n           as='a' href=\"mailto:jrcabrer@ucsd.edu\" target=\"_blank\" \n           title=\"Email me\" circular/>\n\n          <Image src={\"https://4.bp.blogspot.com/--omgjr2n6eg/WyN-i8kG6PI/AAAAAAAASGc/4rW8yeCYWPogpTdE9Y50ry2vcFy_l4rjQCLcBGAs/s320/github.jpg\"} \n           as='a' target=\"_blank\" href=\"https://github.com/jayrc7\" \n           title =\"Check out my repos\"circular/>\n\n          <Image src={\"https://www.leadingenius.ch/wp-content/uploads/2018/06/linkedin.png\"} \n           as='a' href=\"https://www.linkedin.com/in/jasonrcabrera\" \n           title=\"Connect with me\" target=\"_blank\"circular/>\n\n          <Image src={\"https://cdn3.iconfinder.com/data/icons/web-ui-3/128/Menu2-2-512.png\"} \n           as='a' title=\"See my resume\" href=\"https://drive.google.com/file/d/1es4TYiSd-7f7-136S9ANrL-nhpescgXq/view?usp=sharing\" \n           target=\"_blank\" circular/>\n        </Image.Group>\n      </div> \n    )\n  }\n}\n\nexport default Links \n","import React, { Component } from 'react';\nimport './AppHeader.css';\nimport { Icon,Header, Image } from 'semantic-ui-react';\nimport Links from './Links';\n\nclass AppHeader extends React.Component{\n  render(){\n    return(\n      <div className=\"header\"> \n        <Header inverted as='h1'>\n          <Image src=\"https://cdn.dribbble.com/users/109649/screenshots/954354/lightningbolt.png\" />\n            <Header.Content>\n              Jason Cabrera\n              <Header.Subheader> \n                Junior at UC San Diego: B.S. Computer Science \n              </Header.Subheader>\n            </Header.Content>\n        </Header>\n\n        <Links />\n      </div>\n    )\n  }\n}\n\nexport default AppHeader\n","import React, { Component } from 'react';\nimport './ProjectDisplay.css';\nimport { Button,Container, Segment, Header, Icon, List } from \n        'semantic-ui-react';\n\nclass ProjectDisplay extends React.Component{\n    state = {\n        currTags: {},\n        projects: []\n    }\n\n    toggleTag = (event, {value}) => {\n        alert(value);\n    }\n\n    static getDerivedStateFromProps( props, state ){\n    }\n    render(){\n        const {currTags, projects} = this.state\n\n        return(\n            <div className=\"display\"> \n            <Container inverted text>\n                <Header textAlign=\"left\"inverted as='h1'> \n                    <h1>  Projects </h1>\n                </Header>\n\n                <Segment attached =\"top\" inverted>\n                    <Header textAlign=\"left\" content=\"Filter by tag:\" \n                     size = \"tiny\"/>\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"JQuery\"} content={\"JQuery\"} \n                     onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"React\"} content={\"React\"} \n                     onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"Java\"} content={\"Java\"} \n                     onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"Python\"} content={\"Python\"} \n                     onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"HTML/CSS\"} content={\"HTML/CSS\"} \n                     onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"Javascript\"} \n                     content={\"Javascript\"} onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"Hackathon\"} \n                     content={\"Hackathon\"} onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"}\n                    className=\"button\" value={\"Firebase\"} \n                    content={\"Firebase\"} onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"Linux\"} content={\"Linux\"} \n                     onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"API\"} content={\"API\"} \n                     onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                     className=\"button\" value={\"Web\"} content={\"Web\"} \n                     onClick = {this.toggleTag} />\n\n                    <Button compact size = \"tiny\" color = {\"teal\"} \n                    className=\"button\" value={\"Game\"} content={\"Game\"} \n                    onClick = {this.toggleTag} />\n\n                </Segment> \n            </Container>\n            </div> \n        )\n    }\n}\n\nexport default ProjectDisplay\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppHeader from './components/AppHeader';\nimport ProjectDisplay from './components/ProjectDisplay';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\"> \n        <AppHeader />\n        <ProjectDisplay />\n      </div>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}