{"version":3,"sources":["components/AppHeader.js","content/projects.js","components/ProjectDisplay.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","react_default","a","createElement","className","href","title","target","rel","React","Component","proj","projects","name","link","website","organization","description","tags","tag","ProjectDisplay","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currTags","activeProjects","empty","toggleTag","event","_ref","value","setState","prevState","active","checkEmpty","i","length","checkVisible","push","_this2","_this$state","Container","inverted","text","Header","textAlign","Segment","attached","content","size","map","item","Button","toggle","compact","color","key","basic","onClick","ProjectDisplay_ProjectItem","org","visible","ProjectItem","Transition","animation","clearing","Label","App","components_AppHeader","components_ProjectDisplay","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de142718.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/AppHeader.css';\r\nimport { Header, Image } from 'semantic-ui-react';\r\n\r\nclass AppHeader extends React.Component{\r\n  render(){\r\n    return(\r\n      <div className=\"header\"> \r\n\t\t  <h1 className=\"title\"> Jason Cabrera </h1>\r\n\t\t  <h1 className=\"subtitle\"> B.S. Computer Science major at UC San Diego, graduating in Summer 2021.</h1>\r\n\t\t  <div className=\"nav\">\r\n\t\t  \t <a className=\"navlink\" href=\"mailto:jrcabrer@ucsd.edu\" title=\"Email Me\" target=\"_top\" rel=\"noopener noreferrer\"> Email </a>\r\n\t\t\t <a className=\"navlink\" href=\"https://github.com/jayrc7\" title=\"Connect with me\" target=\"_blank\"> Github </a>\r\n\t\t\t <a className=\"navlink\" href=\"https://www.linkedin.com/in/jasonrcabrera\" title=\"Check out my repos\"target=\"_blank\"> LinkedIn </a>\r\n\t\t\t <a className=\"navlink\" href=\"https://drive.google.com/file/d/1YSI4FNqrdemBhaVB86MNhNqWdLwc6_gT/view?usp=sharing\" target=\"_blank\" title=\"See my resume\"> Resume </a>\r\n\t\t  </div>\r\n\r\n\t\t  <br/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppHeader;\r\n","var proj = {\r\n  \"projects\": [\r\n    {\r\n      \"name\": \"Personal Website\",\r\n      \"link\": \"https://github.com/jayrc7/personal-website\",\r\n\t  \"website\":\"\",\r\n\t  \"organization\":\"\",\r\n      \"description\": [\"Created a personal portfolio site in React and Semantic UI, hosted on Github Pages.\", \"Wrote custom components in React for dynamic filtering of projects by tags and to display courses taken.\"],\r\n      \"tags\": [\"Personal\", \"Javascript\", \"React\", \"Semantic UI\"]\r\n    },\r\n\r\n    {\r\n      \"name\": \"Live Well San Diego Market Evaluation Tool\",\r\n      \"link\": \"https://liveweller.herokuapp.com/\",\r\n\t  \"website\":\"https://liveweller.herokuapp.com\",\r\n\t  \"organization\": \"Triton Software Engineering\",\r\n      \"description\": [\"Developed market evaluation tool for Live Well San Diego organization using HTML/CSS/Javascript/JQuery/Bootstrap, configured database to push/pull client responses using Firebase.\", \"Engineered and tested algorithm that handles market evaluations.\", \"Implemented dynamic front end using JQuery.\", \"Triton Software Engineering project, worked in a team of 4 with weekly deadlines.\"],\r\n      \"tags\": [\"Organization\", \"Javascript\", \"HTML/CSS\", \"JQuery\", \"Firebase\", \"Bootstrap\", \"Demo\"]\r\n    },\r\n\r\n    {\r\n      \"name\": \"TwoNote\",\r\n      \"link\": \"https://github.com/jayrc7/Project-TwoNote\",\r\n\t  \"website\":\"https://www.youtube.com/watch?v=GVmKS1qHUqY\",\r\n\t  \"organization\":\"\",\r\n      \"description\": [\"Developer and Co-creator for Linux note taking app.\", \"Engineered algorithms in order to create, rename, edit, and delete notebooks/notes using knowledge learned from data structures course.\", \"Developed frontend using PyGTK api, from the most notable sidebar menu that facilitates the client's note taking experience to the popups that deal with it's designated purpose e.g. creating a notebook.\" ],\r\n      \"tags\": [\"Personal\", \"Python\", \"PyGTK\", \"Linux\", \"Demo\"],\r\n    },\r\n\r\n    {\r\n      \"name\": \"Safeguard\",\r\n      \"link\": \"https://github.com/jayrc7/safeguard\",\r\n\t  \"website\":\"\",\r\n\t  \"organization\":\"LA Hacks 2019 (Won Top 5 Overall Hack)\",\r\n      \"description\": [\"Won Top 5 Overall Hack at LAHacks 2019 for a community safety app. Demoed in front of judges and all LaHacks participants.\", \"Developed portions of frontend using React and Semantic UI. Also dealt with backend Firebase integration.\", \"Configured a Twilio server to receive texts and reply with the nearest safehouse while also alerting clients' location to all community members.\" ],\r\n      \"tags\": [\"Hackathon\", \"Personal\", \"Javascript\", \"React\", \"Twilio\", \"Firebase\"],\r\n    },\r\n\r\n\t{\r\n\t  \"name\": \"2048\", \r\n\t  \"link\": \"\",\r\n\t  \"website\": \"https://www.youtube.com/watch?v=vOTnji-uVtM\",\r\n\t  \"organization\":\"Course Project\",\r\n\t  \"description\": [\"Implemented classic 2048 game that took all the app markets by storm where the objective is to combine matching tiles until the 2048 tile is reached.\", \"JavaFX API for frontend and Java for backend.\", \"Unable to post github repo due to academic integrity rules :(\"],\r\n\t  \"tags\": [\"Course\", \"Java\", \"JavaFX\", \"Game\", \"Demo\"],\r\n\t},\r\n\r\n    {\r\n      \"name\": \"Ball and Paddle\",\r\n      \"link\": \"https://github.com/jayrc7/Ball_and_Paddle\",\r\n\t  \"website\":\"https://www.youtube.com/watch?v=n9ZVauq4Cp8\",\r\n\t  \"organization\":\"Personal Project\",\r\n      \"description\": [\"Implemented classic game where player must eliminate all bricks by reflecting the ball off of a paddle.\", \"JavaFX API for frontend and Java for backend.\" ],\r\n      \"tags\": [\"Personal\", \"Java\", \"JavaFX\",\"Game\", \"Demo\"],\r\n    },\r\n\r\n  ]\r\n}\r\n\r\nvar tag = { \"tags\": [\"Bootstrap\", \"Course\", \"Demo\", \"Firebase\", \"Game\", \"Hackathon\", \"HTML/CSS\", \"Java\", \"JavaFX\", \"Javascript\", \"JQuery\", \"Linux\", \"Organization\", \"Personal\", \"PyGTK\", \"Python\", \"React\", \"Semantic UI\", \"Twilio\"]}\r\n\r\nexport { proj, tag }\r\n","import React, { Component } from 'react';\r\nimport '../css/ProjectDisplay.css';\r\nimport { proj, tag } from '../content/projects.js';\r\nimport { Button, Transition, Container, Segment, Header, Label} from \r\n        'semantic-ui-react';\r\n\r\nclass ProjectDisplay extends React.Component{\r\n    state = {\r\n        currTags: {},\r\n        activeProjects: [],\r\n        empty: true\r\n    }\r\n    \r\n    constructor(props){\r\n      super(props);\r\n      for( let i = 0; i < proj.projects.length; i++){\r\n        this.state.activeProjects.push(proj.projects[i]);\r\n      }\r\n\r\n      for(let i = 0; i < tag.tags.length; i++){\r\n        this.state.currTags[tag.tags[i]] = false;\r\n      }\r\n    }\r\n\r\n    toggleTag = (event, {value}) => {\r\n        const {currTags} = this.state\r\n        currTags[value] = !currTags[value]\r\n        this.setState(prevState => ({active: currTags[value]} ) )\r\n        if(!this.checkEmpty()){\r\n          this.setState({empty: false})\r\n        }\r\n        \r\n        else{\r\n          this.setState({empty: true})\r\n        }\r\n    }\r\n\r\n    checkEmpty = () => {\r\n      for( let i = 0; i < tag.tags.length; i++ ){\r\n        if(this.state.currTags[tag.tags[i]] === true){\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true\r\n    }\r\n    checkVisible = tags => {\r\n      const {currTags} = this.state\r\n      if(this.state.empty){\r\n        return true\r\n      }\r\n      for(let i = 0; i < tags.length; i++){\r\n        if( currTags[tags[i]] ){\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    render(){\r\n        const {currTags, activeProjects} = this.state\r\n\r\n        return(\r\n            <div className=\"display\"> \r\n            <br />\r\n            <Container inverted=\"true\" text>\r\n                <Header textAlign=\"left\"inverted> \r\n                   <h1> Projects </h1>\r\n                </Header>\r\n\r\n                <Segment attached =\"top\" inverted>\r\n                    <Header textAlign=\"left\" content=\"Filter by tag:\" \r\n                     size = \"tiny\"/>\r\n                    \r\n                    {tag.tags.map( item => \r\n                    <Button toggle compact size = \"tiny\" color = \"teal\"\r\n                     className=\"button\" value={item} \r\n                     content={item} key = {item} basic = {!currTags[item]}\r\n                     onClick = {this.toggleTag} /> )}\r\n                    \r\n                </Segment> \r\n\r\n                <Segment attached = \"bottom\">\r\n                  <div className = \"as\" >\r\n                    {activeProjects.map( (item, i) => \r\n                    <ProjectItem title = {item.name} key = {i} link = {item.link} org = {item.organization}\r\n                    tags = {item.tags} description = {item.description} website = {item.website}\r\n                    visible = {\r\n                      this.checkVisible(item.tags)}/>)} \r\n                  </div>\r\n                \r\n                </Segment> \r\n            </Container>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass ProjectItem extends Component {\r\n  render(){\r\n    return (\r\n      <Transition visible = {this.props.visible} animation = \"fade left\" > \r\n      <Segment basic> \r\n        <Segment attached = \"top\" clearing>\r\n          <div className = \"sd\">\r\n              <h1 className = \"project-title\"> {this.props.title}</h1> \r\n\t\t\t\t\r\n\t\t\t  {this.props.org === \"\" ? <h2 className = \"project-type\"> Personal Project </h2> : <h2 className = \"project-type\"> {this.props.org} </h2>}\r\n\r\n\r\n\t\t\t  {this.props.link === \"\" ? \"\" : \r\n                 <a target = \"_blank\" rel=\"noopener noreferrer\" className = \"link\" \r\n                 href = {this.props.link}> View Github Repo >> </a>\r\n\t\t\t  }\r\n\r\n\t\t\t  {(this.props.link === \"\" || this.props.website === \"\") ? \"\" : <br/>}\r\n\t\t\t  <a target=\"_blank\" rel = \"noopener noreferrer\" className = \"link\"\r\n\t\t\t  href = {this.props.website}> {this.props.website === \"\" ? \"\" : \"View Demo >>\"} </a>\r\n          </div>\r\n        </Segment>\r\n        <Segment attached>\r\n          <div className = \"sd\">\r\n          {this.props.tags.map( tag => <Label className = \"Tag\" \r\n          color = {\"teal\"} key = {tag} content = {tag} size = \"large\"/> )}\r\n          </div>\r\n        </Segment> \r\n\r\n        <Segment attached=\"bottom\">\r\n          <div className = \"sd\"> \r\n          {this.props.description.map((item, i) => \r\n          <p className = \"p-title\" key = {i}> {item} </p>)}\r\n          </div>\r\n        </Segment> \r\n      </Segment>\r\n      </Transition>\r\n    )\r\n  }\r\n}\r\nexport default ProjectDisplay\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppHeader from './components/AppHeader';\r\nimport ProjectDisplay from './components/ProjectDisplay';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\"> \r\n        <AppHeader />\r\n\t\t  <ProjectDisplay />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}